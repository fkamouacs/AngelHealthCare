# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs.

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [21.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: run npm ci
      run: npm ci
      working-directory: ./frontend
    
    # - name: Install ESLint
    #   run: npm install -g eslint
    #   working-directory: ./frontend

    # - name: Lint Frontend Code
    #   run: eslint . --max-warnings=0
    #   working-directory: ./frontend

    # - name: run npm run build --if-present
    #   run: npm run build --if-present
    #   working-directory: ./frontend

    - name: npx cypress run --component
      run: npx cypress run --component
      working-directory: ./frontend
    
    - name: npx cypress run
      run: npx cypress run
      working-directory: ./frontend

    - name: Use Node.js ${{ matrix.node-version }} for Backend
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install Backend Dependencies
      run: npm ci
      working-directory: ./backend

    # - name: Install ESLint
    #   run: npm install -g eslint
    #   working-directory: ./backend

    # - name: Lint Backend Code
    #   run: eslint . --max-warnings=0
    #   working-directory: ./backend

    # - name: Build Backend (if necessary)
    #   run: npm run build --if-present
    #   working-directory: ./backend

    - name: Run Backend Tests
      run: npm test
      working-directory: ./backend
  

